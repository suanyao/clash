# Clash 配置文件

# ========================
# Clash-ALL 优化配置
# ========================

# 机场节点订阅
proxy-providers:
  zj:
    url: "http://192.168.5.5:3008/"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: http://connectivitycheck.gstatic.com/generate_204
      interval: 300
    proxy: "直连"

proxies:
  - {name: 直连, type: direct}
  - {name: 拒绝, type: reject}

# ========================
# 主要端口设置
# ========================
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895
allow-lan: true
bind-address: "*"
mode: rule
tcp-concurrent: true
log-level: warning
geodata-mode: false
                                   

# ========================
# # 控制面板
# ========================
external-controller: 0.0.0.0:9090
external-ui: ui
external-ui-name: zashboard
external-ui-url: https://github.moeyy.xyz/https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
secret: "123456"

# ========================
# DNS 设置
# ========================
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.20.0.1/16
  respect-rules: false
  cache-enabled: false  
  nameserver:
    - 202.103.224.68  
    - 202.103.225.68     
    
  proxy-server-nameserver:
    - https://1.1.1.1/dns-query  
    - tls://dns.google           
    - https://doh.opendns.com/dns-query  
    
  fake-ip-filter:                
     - "*.lan"
     - "*.local"
     - "*.home"
     - "*.internal"
     - "+.msftconnecttest.com"
     - "+.msftncsi.com"
     - "time.*.com"
      

# ========================
# TUN 模块
# ========================
tun:
  enable: true
  stack: gvisor
  device: utun
  endpoint-independent-nat: true
  auto-route: true
  auto-detect-interface: false
  auto-redirect: false
  strict-route: false 
  
profile:
  store-selected: true
  store-fake-ip: true

# ========================
# 策略组定义
# ========================
default: &default
  type: select
  proxies:
    - 美国节点
    - 直连
    - 拒绝


proxy-groups:
  - name: 美国节点
    type: url-test
    url: "http://connectivitycheck.gstatic.com/generate_204"
    interval: 300
    tolerance: 30
    use: [zj]
  

  # ===== 业务分流组 =====
  - {name: ChatGPT, <<: *default}
  - {name: gemini, <<: *default}
  - {name: Claude, <<: *default}
  - {name: Meta AI, <<: *default}
  - {name: Perplexity, <<: *default}
  - {name: github, <<: *default}
  - {name: Telegram, <<: *default}
  - {name: Twitter(X), <<: *default}
  - {name: WhatsApp, <<: *default}
  - {name: Facebook, <<: *default}
  - {name: Steam, <<: *default,type: select, proxies: [直连, 美国节点]}
  - {name: Game, <<: *default}
  - {name: YouTube, <<: *default}
  - {name: TikTok, <<: *default}
  - {name: Disney, <<: *default}
  - {name: Netflix, <<: *default}
  - {name: HBO, <<: *default}
  - {name: Spotify, <<: *default}
  - {name: Crypto, <<: *default}
  - {name: Amazon, <<: *default}
  - {name: Apple, <<: *default,type: select, proxies: [直连, 美国节点]}
  - {name: Microsoft, <<: *default,type: select, proxies: [直连, 美国节点]}
  - {name: Google, <<: *default}
  - {name: Test, <<: *default}
  - {name: geolocation, <<: *default}
  - {name: 国外, <<: *default}
  - {name: 国内, type: select, proxies: [直连]}
  - {name: 漏网之鱼,<<: *default}
  
# ========================
# 规则引擎（rules）
# ========================
rules:
   - RULE-SET,Private_Domain,国内             
   - RULE-SET,private_IP,国内,no-resolve    
   - RULE-SET,Youtube_Domain,YouTube    
   - RULE-SET,Telegram_Domain,Telegram                        
   - RULE-SET,Google_Domain,Google
   - RULE-SET,ChatGPT_Domain,ChatGPT
   - RULE-SET,Claude_Domain,Claude
   - RULE-SET,github_Domain,github           
   - RULE-SET,WhatsApp_Domain,WhatsApp
   - RULE-SET,Twitter_Domain,Twitter(X)
   - RULE-SET,gemini_Domain,gemini
   - RULE-SET,Facebook_Domain,Facebook
   - RULE-SET,Amazon_Domain,Amazon
   - RULE-SET,OKX_Domain,Crypto
   - RULE-SET,Bybit_Domain,Crypto
   - RULE-SET,Binance_Domain,Crypto
   - RULE-SET,TikTok_Domain,TikTok
   - RULE-SET,Netflix_Domain,Netflix
   - RULE-SET,Disney_Domain,Disney
   - RULE-SET,HBO_Domain,HBO
   - RULE-SET,Spotify_Domain,Spotify
   - RULE-SET,Steam_Domain,Steam
   - RULE-SET,Epic_Domain,Game
   - RULE-SET,EA_Domain,Game
   - RULE-SET,Blizzard_Domain,Game
   - RULE-SET,UBI_Domain,Game
   - RULE-SET,playstation_Domain,Game
   - RULE-SET,nintend_Domain,Game
   - RULE-SET,Microsoft_Domain,Microsoft
   - RULE-SET,Apple_Domain,Apple
   - RULE-SET,Apple-CN_Domain,Apple
   - RULE-SET,Perplexity_Domain,Perplexity
   - RULE-SET,Meta AI_Domain,Meta AI
   - RULE-SET,TEST_Domain,Test
   - RULE-SET,Proxy_Domain,国外
   - RULE-SET,geolocation_Domain,国外   
   - RULE-SET,China_Domain,国内
   - RULE-SET,Google_IP,Google,no-resolve
   - RULE-SET,Telegram_IP,Telegram,no-resolve
   - RULE-SET,Facebook_IP,Facebook,no-resolve
   - RULE-SET,Netflix_IP,Netflix,no-resolve       
   - RULE-SET,China_IP,国内,no-resolve    
   - MATCH,漏网之鱼
# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
  

rule-providers:
  TEST_Domain: {<<: *class, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Check.list"}
  ChatGPT_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/openai.mrs"}
  Claude_Domain: {<<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Claude/Claude.list"}
  Meta AI_Domain: {<<: *class, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/MetaAi.list"}
  Perplexity_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/perplexity.mrs"}
  Copilot_Domain: {<<: *class, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Copilot.list"}
  gemini_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google-gemini.mrs"}
  github_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/github.mrs"}
  Telegram_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/telegram.mrs"}  
  Telegram_IP: {<<: *ip, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/telegram.mrs"}
  Twitter_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/x.mrs"}
  WhatsApp_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/whatsapp.mrs"}
  Facebook_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/facebook.mrs"}
  Facebook_IP: {<<: *ip, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/facebook.mrs"}
  Amazon_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/amazon.mrs"}
  Apple-CN_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple-cn.mrs"}
  Apple_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple.mrs"} 
  Microsoft_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft.mrs"}
  OKX_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/okx.mrs"}
  Bybit_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/bybit.mrs"}
  Binance_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/binance.mrs"}
  TikTok_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/tiktok.mrs"}
  Netflix_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/netflix.mrs"}
  Netflix_IP: {<<: *ip, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/netflix.mrs"}
  Disney_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/disney.mrs"}
  HBO_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/hbo.mrs"}
  Spotify_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/spotify.mrs"}
  Steam_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/steam.mrs"}
  Epic_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/epicgames.mrs"}
  EA_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/ea.mrs"}
  Blizzard_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/blizzard.mrs"}
  UBI_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/ubisoft.mrs"}
  playstation_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/playstation.mrs"}
  nintend_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/nintendo.mrs"}
  Proxy_Domain: {<<: *class, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Proxy.list"}
  geolocation_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/geolocation-!cn.mrs"} 
  China_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/cn.mrs"}
  China_IP: {<<: *ip, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/cn.mrs"}
  Private_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/private.mrs"}
  private_IP: {<<: *ip, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/private.mrs"}
  Youtube_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/youtube.mrs"}  
  Google_Domain: {<<: *domain, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geosite/google.mrs"}  
  Google_IP: {<<: *ip, url: "https://github.com/metacubex/meta-rules-dat/raw/refs/heads/meta/geo/geoip/google.mrs"}

